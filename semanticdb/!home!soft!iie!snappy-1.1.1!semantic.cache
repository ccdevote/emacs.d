;; Object snappy-1.1.1/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "snappy-1.1.1/"
  :tables (list 
   (semanticdb-table "snappy-c.h"
    :major-mode 'c-mode
    :tags 
        '( ("UTIL_SNAPPY_OPENSOURCE_SNAPPY_C_H_" variable (:constant-flag t) nil [1690 1724])
            ("snappy_validate_compressed_buffer" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("snappy_status" type (:type "class") nil nil)
                :arguments 
                  ( ("compressed" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5577 5600])
                    ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5649 5674]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5529 5675])
            ("snappy_uncompressed_length" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("snappy_status" type (:type "class") nil nil)
                :arguments 
                  ( ("compressed" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [5056 5079])
                    ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5121 5146])
                    ("result" variable
                       (:pointer 1
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5188 5203]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5015 5204])
            ("snappy_max_compressed_length" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("size_t" type (:type "class") nil nil)
                :arguments 
                  ( ("source_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4748 4769]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4712 4770])
            ("snappy_uncompress" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("snappy_status" type (:type "class") nil nil)
                :arguments 
                  ( ("compressed" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [4389 4412])
                    ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4445 4470])
                    ("uncompressed" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [4503 4522])
                    ("uncompressed_length" variable
                       (:pointer 1
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4555 4583]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4357 4584])
            ("snappy_compress" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("snappy_status" type (:type "class") nil nil)
                :arguments 
                  ( ("input" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2934 2952])
                    ("input_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2983 3003])
                    ("compressed" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [3034 3051])
                    ("compressed_length" variable
                       (:pointer 1
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3082 3108]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [2904 3109])
            ("snappy_status" type
               (:typemodifiers ("extern" "\"C\"")
                :type "typedef"
                :typedef ("" type
                     (:members 
                        ( ("SNAPPY_OK" variable
                             (:constant-flag t
                              :default-value (1914 1915)
                              :type "int")
                              (reparse-symbol enumsubparts) [1902 1915])
                          ("SNAPPY_INVALID_INPUT" variable
                             (:constant-flag t
                              :default-value (1942 1943)
                              :type "int")
                              (reparse-symbol enumsubparts) [1919 1943])
                          ("SNAPPY_BUFFER_TOO_SMALL" variable
                             (:constant-flag t
                              :default-value (1973 1974)
                              :type "int")
                              (reparse-symbol enumsubparts) [1947 1974]))                        
                      :type "enum")
                      nil nil))
                (reparse-symbol extern-c-contents) [1885 1991])
            ("stddef.h" include
               (:typemodifiers ("extern" "\"C\"")
                :system-flag t)
                (reparse-symbol extern-c-contents) [1766 1785])
            ("C" extern (:members 
              ( ("stddef.h" include
                   (:typemodifiers ("extern" "\"C\"")
                    :system-flag t)
                    (reparse-symbol extern-c-contents) [1766 1785])
                ("snappy_status" type
                   (:typemodifiers ("extern" "\"C\"")
                    :type "typedef"
                    :typedef ("" type
                         (:members 
                            ( ("SNAPPY_OK" variable
                                 (:constant-flag t
                                  :default-value (1914 1915)
                                  :type "int")
                                  (reparse-symbol enumsubparts) [1902 1915])
                              ("SNAPPY_INVALID_INPUT" variable
                                 (:constant-flag t
                                  :default-value (1942 1943)
                                  :type "int")
                                  (reparse-symbol enumsubparts) [1919 1943])
                              ("SNAPPY_BUFFER_TOO_SMALL" variable
                                 (:constant-flag t
                                  :default-value (1973 1974)
                                  :type "int")
                                  (reparse-symbol enumsubparts) [1947 1974]))                            
                          :type "enum")
                          nil nil))
                    (reparse-symbol extern-c-contents) [1885 1991])
                ("snappy_compress" function
                   (:typemodifiers ("extern" "\"C\"")
                    :type ("snappy_status" type (:type "class") nil nil)
                    :arguments 
                      ( ("input" variable
                           (:pointer 1
                            :constant-flag t
                            :type "char")
                            (reparse-symbol arg-sub-list) [2934 2952])
                        ("input_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2983 3003])
                        ("compressed" variable
                           (:pointer 1
                            :type "char")
                            (reparse-symbol arg-sub-list) [3034 3051])
                        ("compressed_length" variable
                           (:pointer 1
                            :type ("size_t" type (:type "class") nil nil))
                            (reparse-symbol arg-sub-list) [3082 3108]))                      
                    :prototype-flag t)
                    (reparse-symbol extern-c-contents) [2904 3109])
                ("snappy_uncompress" function
                   (:typemodifiers ("extern" "\"C\"")
                    :type ("snappy_status" type (:type "class") nil nil)
                    :arguments 
                      ( ("compressed" variable
                           (:pointer 1
                            :constant-flag t
                            :type "char")
                            (reparse-symbol arg-sub-list) [4389 4412])
                        ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4445 4470])
                        ("uncompressed" variable
                           (:pointer 1
                            :type "char")
                            (reparse-symbol arg-sub-list) [4503 4522])
                        ("uncompressed_length" variable
                           (:pointer 1
                            :type ("size_t" type (:type "class") nil nil))
                            (reparse-symbol arg-sub-list) [4555 4583]))                      
                    :prototype-flag t)
                    (reparse-symbol extern-c-contents) [4357 4584])
                ("snappy_max_compressed_length" function
                   (:typemodifiers ("extern" "\"C\"")
                    :type ("size_t" type (:type "class") nil nil)
                    :arguments 
                      ( ("source_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4748 4769]))                      
                    :prototype-flag t)
                    (reparse-symbol extern-c-contents) [4712 4770])
                ("snappy_uncompressed_length" function
                   (:typemodifiers ("extern" "\"C\"")
                    :type ("snappy_status" type (:type "class") nil nil)
                    :arguments 
                      ( ("compressed" variable
                           (:pointer 1
                            :constant-flag t
                            :type "char")
                            (reparse-symbol arg-sub-list) [5056 5079])
                        ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5121 5146])
                        ("result" variable
                           (:pointer 1
                            :type ("size_t" type (:type "class") nil nil))
                            (reparse-symbol arg-sub-list) [5188 5203]))                      
                    :prototype-flag t)
                    (reparse-symbol extern-c-contents) [5015 5204])
                ("snappy_validate_compressed_buffer" function
                   (:typemodifiers ("extern" "\"C\"")
                    :type ("snappy_status" type (:type "class") nil nil)
                    :arguments 
                      ( ("compressed" variable
                           (:pointer 1
                            :constant-flag t
                            :type "char")
                            (reparse-symbol arg-sub-list) [5577 5600])
                        ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5649 5674]))                      
                    :prototype-flag t)
                    (reparse-symbol extern-c-contents) [5529 5675]))              ) nil [1745 5697]))          
    :file "snappy-c.h"
    :pointmax 5770
    :fsize 5879
    :lastmodtime '(21178 51376)
    :unmatched-syntax '((close-paren 2750 . 2751) (close-paren 2749 . 2750) (close-paren 5515 . 5516) (close-paren 5515 . 5516) (punctuation 2756 . 2757) (punctuation 2755 . 2756) (symbol 2748 . 2749))
    :lexical-table 
        '(("UTIL_SNAPPY_OPENSOURCE_SNAPPY_C_H_")
          )

    )
   (semanticdb-table "snappy.h"
    :major-mode 'c-mode
    :tags 
        '( ("UTIL_SNAPPY_SNAPPY_H__" variable (:constant-flag t) nil [2027 2049])
            ("stddef.h" include (:system-flag t) nil [2051 2070])
            ("string" include (:system-flag t) nil [2071 2088])
            ("snappy-stubs-public.h" include nil nil [2090 2122])
            ("snappy" type
               (:members 
                  ( ("Source" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2145 2158])
                    ("Sink" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [2161 2172])
                    ("Compress" function
                       (:prototype-flag t
                        :arguments 
                          ( ("source" variable
                               (:pointer 1
                                :type ("Source" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2506 2521])
                            ("sink" variable
                               (:pointer 1
                                :type ("Sink" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2522 2533]))                          
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2490 2534])
                    ("GetUncompressedLength" function
                       (:prototype-flag t
                        :arguments 
                          ( ("source" variable
                               (:pointer 1
                                :type ("Source" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2970 2985])
                            ("result" variable
                               (:pointer 1
                                :type ("uint32" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2986 3001]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [2943 3002])
                    ("Compress" function
                       (:prototype-flag t
                        :arguments 
                          ( ("input" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3437 3455])
                            ("input_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3456 3476])
                            ("output" variable
                               (:pointer 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3477 3492]))                          
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3421 3493])
                    ("Uncompress" function
                       (:prototype-flag t
                        :arguments 
                          ( ("compressed" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3792 3815])
                            ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3816 3841])
                            ("uncompressed" variable
                               (:pointer 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3860 3881]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [3776 3882])
                    ("RawCompress" function
                       (:prototype-flag t
                        :arguments 
                          ( ("input" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [4776 4794])
                            ("input_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4814 4834])
                            ("compressed" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [4854 4871])
                            ("compressed_length" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4891 4917]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4759 4918])
                    ("RawUncompress" function
                       (:prototype-flag t
                        :arguments 
                          ( ("compressed" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [5238 5261])
                            ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5262 5287])
                            ("uncompressed" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [5309 5328]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [5219 5329])
                    ("RawUncompress" function
                       (:prototype-flag t
                        :arguments 
                          ( ("compressed" variable
                               (:pointer 1
                                :type ("Source" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5661 5680])
                            ("uncompressed" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [5681 5700]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [5642 5701])
                    ("RawUncompressToIOVec" function
                       (:prototype-flag t
                        :arguments 
                          ( ("compressed" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [6208 6231])
                            ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6232 6257])
                            ("iov" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("iovec" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6286 6310])
                            ("iov_cnt" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6311 6326]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6182 6327])
                    ("RawUncompressToIOVec" function
                       (:prototype-flag t
                        :arguments 
                          ( ("compressed" variable
                               (:pointer 1
                                :type ("Source" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6828 6847])
                            ("iov" variable
                               (:pointer 1
                                :constant-flag t
                                :type ("iovec" type
                                     (:prototype t
                                      :type "struct")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [6848 6872])
                            ("iov_cnt" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6901 6916]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6802 6917])
                    ("MaxCompressedLength" function
                       (:prototype-flag t
                        :arguments 
                          ( ("source_bytes" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7070 7090]))                          
                        :type ("size_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7043 7091])
                    ("GetUncompressedLength" function
                       (:prototype-flag t
                        :arguments 
                          ( ("compressed" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [7357 7380])
                            ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7381 7406])
                            ("result" variable
                               (:pointer 1
                                :type ("size_t" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7436 7451]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [7330 7452])
                    ("IsValidCompressedBuffer" function
                       (:prototype-flag t
                        :arguments 
                          ( ("compressed" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [7749 7772])
                            ("compressed_length" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7804 7829]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [7720 7830])
                    ("kBlockLog" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [8384 8416])
                    ("kBlockLog" variable (:type "int") (reparse-symbol namespacesubparts) [8457 8467])
                    ("kMaxHashTableBits" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [8471 8511])
                    ("kMaxHashTableBits" variable (:type "int") (reparse-symbol namespacesubparts) [8559 8577]))                  
                :type "namespace")
                nil [2124 8579]))          
    :file "snappy.h"
    :pointmax 8641
    :fsize 8640
    :lastmodtime '(21085 7148)
    :unmatched-syntax '((punctuation 8557 . 8558) (punctuation 8556 . 8557) (number 8554 . 8555) (punctuation 8552 . 8553) (symbol 8534 . 8551) (symbol 8527 . 8533) (CONST 8521 . 8526) (STATIC 8514 . 8520) (punctuation 8455 . 8456) (punctuation 8454 . 8455) (number 8452 . 8453) (punctuation 8450 . 8451) (symbol 8439 . 8449) (symbol 8432 . 8438) (CONST 8426 . 8431) (STATIC 8419 . 8425))
    :lexical-table 
        '(("UTIL_SNAPPY_SNAPPY_H__")
          )

    )
   (semanticdb-table "Makefile"
    :major-mode 'makefile-gmake-mode
    :tags 
        '( ("pkgdatadir" variable (:default-value ("$(datadir)/snappy")) nil [698 729])
            ("pkgincludedir" variable (:default-value ("$(includedir)/snappy")) nil [729 766])
            ("pkglibdir" variable (:default-value ("$(libdir)/snappy")) nil [766 795])
            ("pkglibexecdir" variable (:default-value ("$(libexecdir)/snappy")) nil [795 832])
            ("am__cd" variable (:default-value ("CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\"" "&&" "cd")) nil [832 891])
            ("install_sh_DATA" variable (:default-value ("$(install_sh)" "-c" "-m" "644")) nil [891 933])
            ("install_sh_PROGRAM" variable (:default-value ("$(install_sh)" "-c")) nil [933 971])
            ("install_sh_SCRIPT" variable (:default-value ("$(install_sh)" "-c")) nil [971 1008])
            ("INSTALL_HEADER" variable (:default-value ("$(INSTALL_DATA)")) nil [1008 1041])
            ("transform" variable (:default-value ("$(program_transform_name)")) nil [1041 1079])
            ("NORMAL_INSTALL" variable (:default-value (":")) nil [1079 1098])
            ("PRE_INSTALL" variable (:default-value (":")) nil [1098 1114])
            ("POST_INSTALL" variable (:default-value (":")) nil [1114 1131])
            ("NORMAL_UNINSTALL" variable (:default-value (":")) nil [1131 1152])
            ("PRE_UNINSTALL" variable (:default-value (":")) nil [1152 1170])
            ("POST_UNINSTALL" variable (:default-value (":")) nil [1170 1189])
            ("build_triplet" variable (:default-value ("x86_64-unknown-linux-gnu")) nil [1189 1230])
            ("host_triplet" variable (:default-value ("x86_64-unknown-linux-gnu")) nil [1230 1270])
            ("TESTS" variable (:default-value ("snappy_unittest$(EXEEXT)")) nil [1270 1303])
            ("noinst_PROGRAMS" variable (:default-value ("$(am__EXEEXT_1)")) nil [1303 1337])
            ("subdir" variable (:default-value (".")) nil [1337 1348])
            ("DIST_COMMON" variable (:default-value ("README" "$(am__configure_deps)" "$(dist_doc_DATA)" "$(include_HEADERS)" "$(noinst_HEADERS)" "$(srcdir)/Makefile.am" "$(srcdir)/Makefile.in" "$(srcdir)/config.h.in" "$(srcdir)/snappy-stubs-public.h.in" "$(top_srcdir)/configure" "AUTHORS" "COPYING" "ChangeLog" "INSTALL" "NEWS" "config.guess" "config.sub" "depcomp" "install-sh" "ltmain.sh" "missing")) nil [1348 1685])
            ("ACLOCAL_M4" variable (:default-value ("$(top_srcdir)/aclocal.m4")) nil [1685 1723])
            ("am__aclocal_m4_deps" variable (:default-value ("$(top_srcdir)/m4/gtest.m4" "$(top_srcdir)/configure.ac")) nil [1723 1801])
            ("am__configure_deps" variable (:default-value ("$(am__aclocal_m4_deps)" "$(CONFIGURE_DEPENDENCIES)" "$(ACLOCAL_M4)")) nil [1801 1888])
            ("am__CONFIG_DISTCLEAN_FILES" variable (:default-value ("config.status" "config.cache" "config.log" "configure.lineno" "config.status.lineno")) nil [1888 1996])
            ("mkinstalldirs" variable (:default-value ("$(install_sh)" "-d")) nil [1996 2029])
            ("CONFIG_HEADER" variable (:default-value ("config.h")) nil [2029 2054])
            ("CONFIG_CLEAN_FILES" variable (:default-value ("snappy-stubs-public.h")) nil [2054 2097])
            ("CONFIG_CLEAN_VPATH_FILES" variable nil nil [2097 2124])
            ("am__vpath_adj_setup" variable (:default-value ("srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;")) nil [2124 2194])
            ("am__strip_dir" variable (:default-value ("f=`echo $$p | sed -e 's|^.*/||'`;")) nil [2313 2363])
            ("am__install_max" variable (:default-value ("40")) nil [2363 2384])
            ("am__nobase_strip_setup" variable (:default-value ("srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`")) nil [2384 2475])
            ("am__nobase_strip" variable (:default-value ("for" "p" "in" "$$list;" "do" "echo" "\"$$p\";" "done" "|" "sed" "-e" "\"s|$$srcdirstrip/||\"")) nil [2475 2565])
            ("am__base_list" variable (:default-value ("sed" "'$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'" "|" "sed" "'$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'")) nil [2970 3081])
            ("am__installdirs" variable (:default-value ("\"$(DESTDIR)$(libdir)\"" "\"$(DESTDIR)$(docdir)\"" "\"$(DESTDIR)$(includedir)\"")) nil [3320 3411])
            ("libsnappy_la_LIBADD" variable nil nil [3444 3466])
            ("am_libsnappy_la_OBJECTS" variable (:default-value ("snappy.lo" "snappy-sinksource.lo" "snappy-stubs-internal.lo" "snappy-c.lo")) nil [3466 3563])
            ("libsnappy_la_OBJECTS" variable (:default-value ("$(am_libsnappy_la_OBJECTS)")) nil [3563 3613])
            ("libsnappy_la_LINK" variable (:default-value ("$(LIBTOOL)" "--tag=CXX" "$(AM_LIBTOOLFLAGS)" "$(LIBTOOLFLAGS)" "--mode=link" "$(CXXLD)" "$(AM_CXXFLAGS)" "$(CXXFLAGS)" "$(libsnappy_la_LDFLAGS)" "$(LDFLAGS)" "-shared" "-fPIC" "-o" "$@")) nil [3613 3798])
            ("am__EXEEXT_1" variable (:default-value ("snappy_unittest$(EXEEXT)")) nil [3798 3838])
            ("PROGRAMS" variable (:default-value ("$(noinst_PROGRAMS)")) nil [3838 3868])
            ("am_snappy_unittest_OBJECTS" variable (:default-value ("snappy_unittest-snappy_unittest.$(OBJEXT)" "snappy_unittest-snappy-test.$(OBJEXT)")) nil [3868 3984])
            ("snappy_unittest_OBJECTS" variable (:default-value ("$(am_snappy_unittest_OBJECTS)")) nil [3984 4040])
            ("am__DEPENDENCIES_1" variable nil nil [4040 4061])
            ("DEFAULT_INCLUDES" variable (:default-value ("-I.")) nil [4351 4374])
            ("am__depfiles_maybe" variable (:default-value ("depfiles")) nil [4415 4445])
            ("am__mv" variable (:default-value ("mv" "-f")) nil [4445 4460])
            ("ETAGS" variable (:default-value ("etags")) nil [5134 5148])
            ("CTAGS" variable (:default-value ("ctags")) nil [5148 5162])
            ("am__tty_colors" variable (:default-value ("red=;" "grn=;" "lgn=;" "blu=;" "std=")) nil [5162 5210])
            ("GZIP_ENV" variable (:default-value ("--best")) nil [5587 5605])
            ("distuninstallcheck_listfiles" variable (:default-value ("find" "." "-type" "f" "-print")) nil [5605 5658])
            ("distcleancheck_listfiles" variable (:default-value ("find" "." "-type" "f" "-print")) nil [5785 5834])
            ("AR" variable (:default-value ("ar")) nil [5928 5936])
            ("AWK" variable (:default-value ("gawk")) nil [6158 6169])
            ("CC" variable (:default-value ("gcc")) nil [6169 6178])
            ("CCDEPMODE" variable (:default-value ("depmode=gcc3")) nil [6178 6203])
            ("CFLAGS" variable (:default-value ("-g" "-O2")) nil [6203 6219])
            ("CPP" variable (:default-value ("gcc" "-E")) nil [6219 6232])
            ("CPPFLAGS" variable nil nil [6232 6244])
            ("CXX" variable (:default-value ("g++")) nil [6244 6254])
            ("CXXCPP" variable (:default-value ("g++" "-E")) nil [6254 6270])
            ("CXXDEPMODE" variable (:default-value ("depmode=gcc3")) nil [6270 6296])
            ("CXXFLAGS" variable (:default-value ("-g" "-O2")) nil [6296 6314])
            ("CYGPATH_W" variable (:default-value ("echo")) nil [6314 6331])
            ("DEFS" variable (:default-value ("-DHAVE_CONFIG_H")) nil [6331 6354])
            ("DEPDIR" variable (:default-value (".deps")) nil [6354 6369])
            ("DLLTOOL" variable (:default-value ("false")) nil [6369 6385])
            ("DSYMUTIL" variable nil nil [6385 6397])
            ("DUMPBIN" variable nil nil [6397 6408])
            ("ECHO_C" variable nil nil [6408 6418])
            ("ECHO_N" variable (:default-value ("-n")) nil [6418 6430])
            ("ECHO_T" variable nil nil [6430 6440])
            ("EGREP" variable (:default-value ("/usr/bin/grep" "-E")) nil [6440 6465])
            ("EXEEXT" variable nil nil [6465 6475])
            ("FGREP" variable (:default-value ("/usr/bin/grep" "-F")) nil [6475 6500])
            ("GREP" variable (:default-value ("/usr/bin/grep")) nil [6500 6521])
            ("GTEST_CONFIG" variable nil nil [6521 6537])
            ("GTEST_CPPFLAGS" variable nil nil [6537 6555])
            ("GTEST_CXXFLAGS" variable nil nil [6555 6573])
            ("GTEST_LDFLAGS" variable nil nil [6573 6590])
            ("GTEST_LIBS" variable nil nil [6590 6604])
            ("GTEST_VERSION" variable nil nil [6604 6621])
            ("HAVE_GTEST" variable (:default-value ("no")) nil [6621 6637])
            ("INSTALL" variable (:default-value ("/usr/bin/install" "-c")) nil [6637 6667])
            ("LD" variable (:default-value ("/usr/bin/ld" "-m" "elf_x86_64")) nil [6801 6832])
            ("LDFLAGS" variable nil nil [6832 6843])
            ("LIBOBJS" variable nil nil [6843 6854])
            ("LIBS" variable nil nil [6854 6862])
            ("LIBTOOL_DEPS" variable (:default-value ("./ltmain.sh")) nil [6905 6932])
            ("LIPO" variable nil nil [6932 6940])
            ("LN_S" variable (:default-value ("ln" "-s")) nil [6940 6953])
            ("LTLIBOBJS" variable nil nil [6953 6966])
            ("MANIFEST_TOOL" variable (:default-value (":")) nil [7037 7055])
            ("MKDIR_P" variable (:default-value ("/usr/bin/mkdir" "-p")) nil [7055 7083])
            ("NM" variable (:default-value ("/usr/bin/nm" "-B")) nil [7083 7103])
            ("NMEDIT" variable nil nil [7103 7113])
            ("OBJDUMP" variable (:default-value ("objdump")) nil [7113 7131])
            ("OBJEXT" variable (:default-value ("o")) nil [7131 7142])
            ("OTOOL" variable nil nil [7142 7151])
            ("OTOOL64" variable nil nil [7151 7162])
            ("PACKAGE" variable (:default-value ("snappy")) nil [7162 7179])
            ("PACKAGE_BUGREPORT" variable nil nil [7179 7200])
            ("PACKAGE_NAME" variable (:default-value ("snappy")) nil [7200 7222])
            ("PACKAGE_STRING" variable (:default-value ("snappy" "1.1.1")) nil [7222 7252])
            ("PACKAGE_TARNAME" variable (:default-value ("snappy")) nil [7252 7277])
            ("PACKAGE_URL" variable nil nil [7277 7292])
            ("PACKAGE_VERSION" variable (:default-value ("1.1.1")) nil [7292 7316])
            ("PATH_SEPARATOR" variable (:default-value (":")) nil [7316 7335])
            ("PKG_CONFIG" variable (:default-value ("/usr/bin/pkg-config")) nil [7335 7368])
            ("PKG_CONFIG_LIBDIR" variable nil nil [7368 7389])
            ("PKG_CONFIG_PATH" variable nil nil [7389 7408])
            ("RANLIB" variable (:default-value ("ranlib")) nil [7408 7424])
            ("SED" variable (:default-value ("/usr/bin/sed")) nil [7424 7443])
            ("SET_MAKE" variable nil nil [7443 7455])
            ("SHELL" variable (:default-value ("/bin/sh")) nil [7455 7471])
            ("SNAPPY_LTVERSION" variable (:default-value ("3:0:2")) nil [7471 7496])
            ("SNAPPY_MAJOR" variable (:default-value ("1")) nil [7496 7513])
            ("SNAPPY_MINOR" variable (:default-value ("1")) nil [7513 7530])
            ("SNAPPY_PATCHLEVEL" variable (:default-value ("1")) nil [7530 7552])
            ("STRIP" variable (:default-value ("strip")) nil [7552 7566])
            ("UNITTEST_LIBS" variable (:default-value ("-lz")) nil [7566 7587])
            ("VERSION" variable (:default-value ("1.1.1")) nil [7587 7603])
            ("abs_builddir" variable (:default-value ("/home/soft/iie/snappy-1.1.1")) nil [7603 7646])
            ("abs_srcdir" variable (:default-value ("/home/soft/iie/snappy-1.1.1")) nil [7646 7687])
            ("abs_top_builddir" variable (:default-value ("/home/soft/iie/snappy-1.1.1")) nil [7687 7734])
            ("abs_top_srcdir" variable (:default-value ("/home/soft/iie/snappy-1.1.1")) nil [7734 7779])
            ("ac_ct_AR" variable (:default-value ("ar")) nil [7779 7793])
            ("ac_ct_CC" variable (:default-value ("gcc")) nil [7793 7808])
            ("ac_ct_CXX" variable (:default-value ("g++")) nil [7808 7824])
            ("ac_ct_DUMPBIN" variable nil nil [7824 7841])
            ("ac_cv_have_stddef_h" variable (:default-value ("1")) nil [7841 7865])
            ("ac_cv_have_stdint_h" variable (:default-value ("1")) nil [7865 7889])
            ("ac_cv_have_sys_uio_h" variable (:default-value ("0")) nil [7889 7914])
            ("am__leading_dot" variable (:default-value (".")) nil [7936 7956])
            ("am__quote" variable nil nil [7956 7969])
            ("build" variable (:default-value ("x86_64-unknown-linux-gnu")) nil [8066 8099])
            ("build_alias" variable nil nil [8099 8114])
            ("build_cpu" variable (:default-value ("x86_64")) nil [8114 8133])
            ("build_os" variable (:default-value ("linux-gnu")) nil [8133 8154])
            ("build_vendor" variable (:default-value ("unknown")) nil [8154 8177])
            ("builddir" variable (:default-value (".")) nil [8177 8190])
            ("gflags_CFLAGS" variable nil nil [8335 8352])
            ("gflags_LIBS" variable nil nil [8352 8367])
            ("host" variable (:default-value ("x86_64-unknown-linux-gnu")) nil [8367 8399])
            ("host_alias" variable nil nil [8399 8413])
            ("host_cpu" variable (:default-value ("x86_64")) nil [8413 8431])
            ("host_os" variable (:default-value ("linux-gnu")) nil [8431 8451])
            ("host_vendor" variable (:default-value ("unknown")) nil [8451 8473])
            ("mkdir_p" variable (:default-value ("/usr/bin/mkdir" "-p")) nil [8771 8799])
            ("oldincludedir" variable (:default-value ("/usr/include")) nil [8799 8828])
            ("prefix" variable (:default-value ("/usr/local")) nil [8847 8867])
            ("program_transform_name" variable (:default-value ("s,x,x,")) nil [8867 8899])
            ("srcdir" variable (:default-value (".")) nil [8978 8989])
            ("target_alias" variable nil nil [9016 9032])
            ("top_build_prefix" variable nil nil [9032 9052])
            ("top_builddir" variable (:default-value (".")) nil [9052 9069])
            ("top_srcdir" variable (:default-value (".")) nil [9069 9084])
            ("ACLOCAL_AMFLAGS" variable (:default-value ("-I" "m4")) nil [9084 9108])
            ("lib_LTLIBRARIES" variable (:default-value ("libsnappy.la")) nil [9120 9151])
            ("libsnappy_la_SOURCES" variable (:default-value ("snappy.cc" "snappy-sinksource.cc" "snappy-stubs-internal.cc" "snappy-c.cc")) nil [9151 9242])
            ("include_HEADERS" variable (:default-value ("snappy.h" "snappy-sinksource.h" "snappy-stubs-public.h" "snappy-c.h")) nil [9299 9379])
            ("noinst_HEADERS" variable (:default-value ("snappy-internal.h" "snappy-stubs-internal.h" "snappy-test.h")) nil [9379 9452])
            ("snappy_unittest_SOURCES" variable (:default-value ("snappy_unittest.cc" "snappy-test.cc")) nil [9544 9604])
            ("EXTRA_DIST" variable (:default-value ("autogen.sh" "testdata/alice29.txt" "testdata/asyoulik.txt" "testdata/baddata1.snappy" "testdata/baddata2.snappy" "testdata/baddata3.snappy" "testdata/cp.html" "testdata/fields.c" "testdata/geo.protodata" "testdata/grammar.lsp" "testdata/house.jpg" "testdata/html" "testdata/html_x_4" "testdata/kennedy.xls" "testdata/kppkn.gtb" "testdata/lcet10.txt" "testdata/mapreduce-osdi-1.pdf" "testdata/plrabn12.txt" "testdata/ptt5" "testdata/sum" "testdata/urls.10K" "testdata/xargs.1")) nil [9730 10177])
            ("dist_doc_DATA" variable (:default-value ("ChangeLog" "COPYING" "INSTALL" "NEWS" "README" "format_description.txt" "framing_format.txt")) nil [10177 10273])
            ("all" function (:arguments ("config.h")) nil [10273 10319])
            (".SUFFIXES" function nil nil [10320 10331])
            (".SUFFIXES" function (:arguments (".cc" ".lo" ".o" ".obj")) nil [10331 10358])
            ("am--refresh" function (:arguments ("Makefile")) nil [10358 10384])
            (".PRECIOUS" function (:arguments ("Makefile")) nil [10802 10822])
            ("config.h" function (:arguments ("stamp-h1")) nil [11507 11646])
            ("distclean-hdr" function nil nil [11901 11942])
            ("uninstall-libLTLIBRARIES" function nil nil [12671 13041])
            ("clean-libLTLIBRARIES" function nil nil [13042 13343])
            ("clean-noinstPROGRAMS" function nil nil [13541 13821])
            ("mostlyclean-compile" function nil nil [14064 14105])
            ("distclean-compile" function nil nil [14106 14141])
            (".cc.o" function nil nil [14401 14515])
            (".cc.obj" function nil nil [14629 14762])
            (".cc.lo" function nil nil [14893 15011])
            ("snappy_unittest-snappy_unittest.o" function (:arguments ("snappy_unittest.cc")) nil [15128 15605])
            ("snappy_unittest-snappy_unittest.obj" function (:arguments ("snappy_unittest.cc")) nil [15964 16505])
            ("snappy_unittest-snappy-test.o" function (:arguments ("snappy-test.cc")) nil [16926 17367])
            ("snappy_unittest-snappy-test.obj" function (:arguments ("snappy-test.cc")) nil [17706 18207])
            ("mostlyclean-libtool" function nil nil [18604 18638])
            ("clean-libtool" function nil nil [18639 18675])
            ("distclean-libtool" function nil nil [18676 18721])
            ("uninstall-dist_docDATA" function nil nil [19180 19412])
            ("uninstall-includeHEADERS" function nil nil [19901 20145])
            ("tags" function (:arguments ("TAGS")) nil [20493 20504])
            ("ctags" function (:arguments ("CTAGS")) nil [21239 21252])
            ("GTAGS" function nil nil [21745 21865])
            ("distclean-tags" function nil nil [21866 21928])
            ("dist-gzip" function (:arguments ("distdir")) nil [26347 26468])
            ("dist-bzip2" function (:arguments ("distdir")) nil [26469 26595])
            ("dist-lzip" function (:arguments ("distdir")) nil [26596 26716])
            ("dist-lzma" function (:arguments ("distdir")) nil [26717 26826])
            ("dist-xz" function (:arguments ("distdir")) nil [26827 26948])
            ("dist-tarZ" function (:arguments ("distdir")) nil [26949 27056])
            ("dist-shar" function (:arguments ("distdir")) nil [27057 27163])
            ("dist-zip" function (:arguments ("distdir")) nil [27164 27263])
            ("dist" function (:arguments ("distdir")) nil [27264 27389])
            ("dist-all" function (:arguments ("distdir")) nil [27264 27389])
            ("distcheck" function (:arguments ("dist")) nil [27549 29762])
            ("distuninstallcheck" function nil nil [29762 30360])
            ("distcleancheck" function (:arguments ("distclean")) nil [30360 30695])
            ("check-am" function (:arguments ("all-am")) nil [30695 30749])
            ("check" function (:arguments ("check-am")) nil [30749 30765])
            ("installdirs" function nil nil [30841 30992])
            ("install" function (:arguments ("install-am")) nil [30992 31012])
            ("install-exec" function (:arguments ("install-exec-am")) nil [31012 31042])
            ("install-data" function (:arguments ("install-data-am")) nil [31042 31072])
            ("uninstall" function (:arguments ("uninstall-am")) nil [31072 31096])
            ("install-am" function (:arguments ("all-am")) nil [31097 31174])
            ("installcheck" function (:arguments ("installcheck-am")) nil [31175 31205])
            ("install-strip" function nil nil [31205 31634])
            ("mostlyclean-generic" function nil nil [31634 31655])
            ("clean-generic" function nil nil [31656 31671])
            ("distclean-generic" function nil nil [31672 31857])
            ("maintainer-clean-generic" function nil nil [31858 32010])
            ("clean" function (:arguments ("clean-am")) nil [32010 32026])
            ("clean-am" function (:arguments ("clean-generic" "clean-libLTLIBRARIES" "clean-libtool" "clean-noinstPROGRAMS" "mostlyclean-am")) nil [32027 32125])
            ("distclean" function (:arguments ("distclean-am")) nil [32126 32226])
            ("distclean-am" function (:arguments ("clean-am" "distclean-compile" "distclean-generic" "distclean-hdr" "distclean-libtool" "distclean-tags")) nil [32226 32335])
            ("dvi" function (:arguments ("dvi-am")) nil [32336 32348])
            ("dvi-am" function nil nil [32349 32357])
            ("html" function (:arguments ("html-am")) nil [32358 32372])
            ("html-am" function nil nil [32373 32382])
            ("info" function (:arguments ("info-am")) nil [32383 32397])
            ("info-am" function nil nil [32398 32407])
            ("install-data-am" function (:arguments ("install-dist_docDATA" "install-includeHEADERS")) nil [32408 32469])
            ("install-dvi" function (:arguments ("install-dvi-am")) nil [32470 32498])
            ("install-dvi-am" function nil nil [32499 32515])
            ("install-exec-am" function (:arguments ("install-libLTLIBRARIES")) nil [32516 32556])
            ("install-html" function (:arguments ("install-html-am")) nil [32557 32587])
            ("install-html-am" function nil nil [32588 32605])
            ("install-info" function (:arguments ("install-info-am")) nil [32606 32636])
            ("install-info-am" function nil nil [32637 32654])
            ("install-man" function nil nil [32655 32668])
            ("install-pdf" function (:arguments ("install-pdf-am")) nil [32669 32697])
            ("install-pdf-am" function nil nil [32698 32714])
            ("install-ps" function (:arguments ("install-ps-am")) nil [32715 32741])
            ("install-ps-am" function nil nil [32742 32757])
            ("installcheck-am" function nil nil [32758 32775])
            ("maintainer-clean" function (:arguments ("maintainer-clean-am")) nil [32776 32928])
            ("maintainer-clean-am" function (:arguments ("distclean-am" "maintainer-clean-generic")) nil [32928 32987])
            ("mostlyclean" function (:arguments ("mostlyclean-am")) nil [32988 33016])
            ("mostlyclean-am" function (:arguments ("mostlyclean-compile" "mostlyclean-generic" "mostlyclean-libtool")) nil [33017 33096])
            ("pdf" function (:arguments ("pdf-am")) nil [33097 33109])
            ("pdf-am" function nil nil [33110 33118])
            ("ps" function (:arguments ("ps-am")) nil [33119 33129])
            ("ps-am" function nil nil [33130 33137])
            ("uninstall-am" function (:arguments ("uninstall-dist_docDATA" "uninstall-includeHEADERS" "uninstall-libLTLIBRARIES")) nil [33138 33228])
            (".MAKE" function (:arguments ("all" "check-am" "install-am" "install-strip")) nil [33229 33274])
            (".PHONY" function (:arguments ("CTAGS" "GTAGS" "all" "all-am" "am--refresh" "check" "check-TESTS" "check-am" "clean" "clean-generic" "clean-libLTLIBRARIES" "clean-libtool" "clean-noinstPROGRAMS" "ctags" "dist" "dist-all" "dist-bzip2" "dist-gzip" "dist-lzip" "dist-lzma" "dist-shar" "dist-tarZ" "dist-xz" "dist-zip" "distcheck" "distclean" "distclean-compile" "distclean-generic" "distclean-hdr" "distclean-libtool" "distclean-tags" "distcleancheck" "distdir" "distuninstallcheck" "dvi" "dvi-am" "html" "html-am" "info" "info-am" "install" "install-am" "install-data" "install-data-am" "install-dist_docDATA" "install-dvi" "install-dvi-am" "install-exec" "install-exec-am" "install-html" "install-html-am" "install-includeHEADERS" "install-info" "install-info-am" "install-libLTLIBRARIES" "install-man" "install-pdf" "install-pdf-am" "install-ps" "install-ps-am" "install-strip" "installcheck" "installcheck-am" "installdirs" "maintainer-clean" "maintainer-clean-generic" "mostlyclean" "mostlyclean-compile" "mostlyclean-generic" "mostlyclean-libtool" "pdf" "pdf-am" "ps" "ps-am" "tags" "uninstall" "uninstall-am" "uninstall-dist_docDATA" "uninstall-includeHEADERS" "uninstall-libLTLIBRARIES")) nil [33275 34335]))          
    :file "Makefile"
    :pointmax 34529
    :fsize 34542
    :lastmodtime '(21179 52539)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!soft!iie!snappy-1.1.1!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
